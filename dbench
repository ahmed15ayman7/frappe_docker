#!/bin/bash

options=$(getopt -o hd:ac: --long add,help,developer:,setup::,start::,init:: -- "$@")
[ $? -eq 0 ] || { 
  echo "entering container"
  docker exec -it frappe bash
}

function usage {
  echo "Usage: dbench [-hda [sitename] | --init [-ed] [sitename] | --setup [-d] | --start [-b] | -c \"<command to be executed on bench inside container>\"]"
  echo ''
  echo 'where:'
  echo '    -h    show this help text'
  echo '    -c command   send a command to bench in the container'
  echo '    -d [sitename]    enables developer mode for specified site'  
  echo '    -a    adds site-names to /etc/hosts file in the container to facilitate multisite access'
  echo '    --setup [-d]   builds docker containers, NOTE: assumes you have docker installed'
  echo '            -d    start up docker containers as well'
  echo '    --start [-b]   starts frappe docker'
  echo '            -b    starts bench as well'
  echo '    --init [-ed] [sitename] initializes frappe-bench in docker and adds a site "sitename" (if not specified, it will default to site1.local)'
  echo '           -e  initializes frappe-bench and installs erpnext'
  echo '           -d  initializes frappe-bench and enables developer mode'
}

function frappe_installer {
  echo "starting frappe_docker setup"
  docker exec -i -u root frappe bash -c "cd /home/frappe && chown -R frappe:frappe ./*" 
  docker exec -it frappe bash -c "cd .. && bench init frappe-bench --ignore-exist --skip-redis-config-generation && cd frappe-bench"
  docker exec -it frappe bash -c "mv Procfile_docker Procfile && mv sites/common_site_config_docker.json sites/common_site_config.json"
  echo "frappe-bench folder setup"
  docker exec -it -u root frappe bash -c "apt-get install vim -y && apt-get install sudo -y && usermod -aG sudo frappe && printf '# User rules for frappe\nfrappe ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers.d/frappe"
  echo "adding $1"
  docker exec -it frappe bash -c "bench new-site $1"
  docker exec -i -u root frappe bash -c "echo 127.0.0.1   $1 >> /etc/hosts"
  sudo su -c 'echo 127.0.0.1   $1 >> /etc/hosts'
  echo "$1 added"
}

eval set -- "$options"
while true; do
  case "$1" in
    -h | --help)
      usage
      ;;
    -a | --add)
      a=$(docker exec -i frappe bash -c "cd ~/frappe-bench && ls sites/*/site_config.json" | grep -o '/.\+/')
      a="${a//$'\n'/ }"
      a=$(echo "$a" | tr -d / )
      result="127.0.0.1 ${a}"
      echo "$result"
      docker exec -u root -i frappe bash -c "echo ${result} | tee --append /etc/hosts"
      docker exec -itu root frappe bash -c "printf '# User rules for frappe\nfrappe ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers.d/frappe"
      ;;
    -d | --developer)
        shift; # The arg is next in position args
        docker exec -it -u root frappe bash -c "bench --site $$ set-config \"developer_mode\" 1 &&  bench clear-cache"
        ;;
    --)
        shift
        break
        ;;
    esac
    shift
done